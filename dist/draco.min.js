/*! `draco` grammar compiled for Highlight.js 11.8.0 */
(()=>{var n=(()=>{"use strict";return n=>{const t=(n="")=>({className:"subst",
variants:[{match:`\\${n}[0\\tnr"']`},{match:`\\${n}u{[0-9a-fA-F]{1,8}}`}]
}),a=(n="")=>({className:"subst",match:`\\${n}[\t ]*(?:[\r\n]|\r\n)`
}),i=(n="")=>({className:"subst",label:"interpolation",begin:`\\${n}{`,end:"}"
}),e=n=>({begin:n+'"',end:'"'+n,contains:[t(n),i(n)]}),s=(n="")=>({
begin:n+'"""',end:'"""'+n,contains:[t(n),a(n),i(n)]}),r={className:"string",
variants:[e(""),e("#"),e("##"),e("###"),s(""),s("#"),s("##"),s("###")]};return{
name:"Draco",case_insensitive:!1,keywords:{
keyword:["and","else","for","func","goto","if","import","in","intenral","mod","not","or","public","rem","return","val","var","while"],
built_in:["bool","char","float32","float64","int8","int16","int32","int64","uint8","uint16","uint32","uint64","unit","string"],
literal:["true","false"]},contains:[n.C_LINE_COMMENT_MODE,r]}}})()
;hljs.registerLanguage("draco",n)})();